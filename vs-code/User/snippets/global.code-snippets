{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"VSCode snippet syntax": { 
		"prefix": ["snip"],
		"body": [
			"\"${1:Snippet-name shown in Intellisence if NO  'Description'}\":{",
			"\t\"prefix\": \"${2:Trigger-word. Type: array|str}\",",
			"\t\"body\": [",
			"\t\t\"${3:What you want after trigger-word suggestion of Intellisense is selected ...???\n\t\tFor multi-line text, have each line of the multi-line text as a separate item in this array.\n\t\tIf the resulting-text contains double-quote escape it using back-slash}\"",
			"\t],}",
			"\t\"description\": \"${4:Text to be show in Intellisense}\",",
			"}"
		],
		//"prefix": "${0: trigger word type: array|string }",

	}
}