let l:bm_file_version = 1
let l:bm_sessions = {'default': {'/home/sudhir/stow-configs/man-pages/tmux3.4.txt': [{'sign_idx': 9539, 'line_nr': 426, 'content': '           3.   The start of a session name, for example ‘mysess’ would match', 'annotation': 'target-session arg can match start of session name'},{'sign_idx': 9516, 'line_nr': 162, 'content': '           f           Prompt to search for text in open windows.', 'annotation': 'prompt to search for window by its name'},{'sign_idx': 9517, 'line_nr': 164, 'content': '           l           Move to the previously selected window.', 'annotation': 'move to previously selected window'},{'sign_idx': 9547, 'line_nr': 506, 'content': '     Sessions, window and panes are each numbered with a unique ID; session', 'annotation': 'syntax to specify session, window pane ID'},{'sign_idx': 9527, 'line_nr': 242, 'content': '     again when it parses and executes its command.  Commands like if-shell,', 'annotation': 'sequential cmd execution'},{'sign_idx': 9504, 'line_nr': 58, 'content': '     -f file       Specify an alternative configuration file.  By default,', 'annotation': 'where tmux looks for config file and what''s the way to supply alternate config file'},{'sign_idx': 9533, 'line_nr': 375, 'content': '     Environment variables may be set by using the syntax ‘name=value’, for', 'annotation': 'syntax to define env variable'},{'sign_idx': 9531, 'line_nr': 321, 'content': '     Command arguments may be specified as strings surrounded by single ('')', 'annotation': 'various ways of supplying cmd arguments, '', ", {}'},{'sign_idx': 9532, 'line_nr': 324, 'content': '     cannot span multiple lines except with line continuation.  Braces can', 'annotation': 'cmd args in {} span multiple lines'},{'sign_idx': 9522, 'line_nr': 190, 'content': '           M-n         Move to the next window with a bell or activity', 'annotation': 'Alt-n/p default keys available to move next previous window, remove from current key mapping'},{'sign_idx': 9537, 'line_nr': 408, 'content': '     target-client, target-session, target-window, or target-pane.  These', 'annotation': 'various target-* commands'},{'sign_idx': 9506, 'line_nr': 140, 'content': '           #           List all paste buffers.', 'annotation': 'key-bind list contents of tmux contents'},{'sign_idx': 9507, 'line_nr': 141, 'content': '           $           Rename the current session.', 'annotation': 'rename session'},{'sign_idx': 9551, 'line_nr': 533, 'content': '     command [argument ...] refers to a tmux command, either passed with the', 'annotation': '2 variations of passing tmux cmd arguments'},{'sign_idx': 9508, 'line_nr': 143, 'content': '           &           Kill the current window.', 'annotation': 'kill current window'},{'sign_idx': 9509, 'line_nr': 145, 'content': '           (           Switch the attached client to the previous session.', 'annotation': 'switch to next/previous session'},{'sign_idx': 9510, 'line_nr': 147, 'content': '           ,           Rename the current window.', 'annotation': 'rename current window'},{'sign_idx': 9525, 'line_nr': 221, 'content': '     tmux distinguishes between command parsing and execution.  In order to', 'annotation': 'command parsing'},{'sign_idx': 9502, 'line_nr': 37, 'content': '     are managed by a single server.  The server and each client are separate', 'annotation': 'what''s client & what''s server'},{'sign_idx': 9540, 'line_nr': 432, 'content': '     If the session name is prefixed with an ‘=’, only an exact match is ac‐', 'annotation': 'enforce exact match of session name'},{'sign_idx': 9552, 'line_nr': 564, 'content': '     The tmux server manages clients, sessions, windows and panes.  Clients', 'annotation': 'explain server, client, session, window'},{'sign_idx': 9518, 'line_nr': 175, 'content': '           w           Choose the current window interactively.', 'annotation': 'choose window interactively across different session'},{'sign_idx': 9519, 'line_nr': 176, 'content': '           x           Kill the current pane.', 'annotation': 'kill current pane'},{'sign_idx': 9520, 'line_nr': 178, 'content': '           {           Swap the current pane with the previous pane.', 'annotation': 'swap current pane with previous pane'},{'sign_idx': 9548, 'line_nr': 515, 'content': '     shell-command arguments are sh(1) commands.  This may be a single argu‐', 'annotation': 'how to specify shell cmds. exiting the shell cmd will return to previously active window'},{'sign_idx': 9555, 'line_nr': 908, 'content': '           begin-selection                              Space           C-Space', 'annotation': 'begin selection in copy mode'},{'sign_idx': 9549, 'line_nr': 518, 'content': '           new-window ''vi ~/.tmux.conf''', 'annotation': 'example of passing shell cmd to tmux command'},{'sign_idx': 9534, 'line_nr': 380, 'content': '           %hidden MYVAR=42', 'annotation': 'hidden env variable'},{'sign_idx': 9523, 'line_nr': 202, 'content': '     Key bindings may be changed with the bind-key and unbind-key commands.', 'annotation': 'commands to bind and unbind keys'},{'sign_idx': 9535, 'line_nr': 385, 'content': '     Commands may be parsed conditionally by surrounding them with ‘%if’,', 'annotation': 'conditionals if-elif, args are expanded as formats'},{'sign_idx': 9500, 'line_nr': 16, 'content': '     When tmux is started, it creates a new session with a single window and', 'annotation': 'what happens when tmux is started'},{'sign_idx': 9556, 'line_nr': 927, 'content': '           copy-selection-and-cancel [<prefix>]         Enter           M-w', 'annotation': 'copy the selected content'},{'sign_idx': 9544, 'line_nr': 462, 'content': '     The following special tokens are available to indicate particular win‐', 'annotation': 'special tokens to represent window'},{'sign_idx': 9536, 'line_nr': 417, 'content': '     list-clients command.', 'annotation': 'cmd to list client'},{'sign_idx': 9542, 'line_nr': 419, 'content': '     target-session is tried as, in order:', 'annotation': 'order of target-session resolution'},{'sign_idx': 9512, 'line_nr': 152, 'content': '           ;           Move to the previously active pane.', 'annotation': 'move to previous active pane'},{'sign_idx': 9513, 'line_nr': 153, 'content': '           =           Choose which buffer to paste interactively from a', 'annotation': 'select content to paste interactivly'},{'sign_idx': 9514, 'line_nr': 158, 'content': '           [           Enter copy mode to copy text or view the history.', 'annotation': 'enter copy mode, like Vim''s visual mode'},{'sign_idx': 9515, 'line_nr': 159, 'content': '           ]           Paste the most recently copied buffer of text.', 'annotation': 'paste recently copied'},{'sign_idx': 9553, 'line_nr': 567, 'content': '     command.  Each session has one or more windows linked into it.  Windows', 'annotation': 'windows maybe or can be linked to multiple sessions, ???'},{'sign_idx': 9526, 'line_nr': 235, 'content': '     To execute commands, each client has a ‘command queue’.  A global com‐', 'annotation': 'cmd queue'},{'sign_idx': 9503, 'line_nr': 48, 'content': '     -c shell-command', 'annotation': 'start tmux by running a shell command. eg: cd to dir'},{'sign_idx': 9529, 'line_nr': 313, 'content': '     Comments are marked by the unquoted # character - any remaining text af‐', 'annotation': 'comments starts with #'},{'sign_idx': 9530, 'line_nr': 316, 'content': '     If the last character of a line is \, the line is joined with the fol‐', 'annotation': 'line continuation like Python, \'},{'sign_idx': 9546, 'line_nr': 496, 'content': '     The tokens ‘+’ and ‘-’ may be followed by an offset, for example:', 'annotation': 'sytanx to use token +, - with offset'},{'sign_idx': 9541, 'line_nr': 440, 'content': '     target-window (or src-window or dst-window) specifies a window in the', 'annotation': 'target-window value specification and its order of resolution'},{'sign_idx': 9511, 'line_nr': 150, 'content': '           0 to 9      Select windows 0 to 9.', 'annotation': 'select windows based on the index number'},{'sign_idx': 9543, 'line_nr': 446, 'content': '           2.   A window index, for example ‘mysession:1’ is window 1 in ses‐', 'annotation': 'syntax session-name:window-index'},{'sign_idx': 9557, 'line_nr': 967, 'content': '           rectangle-toggle                             v               R', 'annotation': 'enter block or rectangle selection in copy mode'},{'sign_idx': 9554, 'line_nr': 911, 'content': '           clear-selection                              Escape          C-g', 'annotation': 'clear selection in copy mode'},{'sign_idx': 9550, 'line_nr': 524, 'content': '     Additionally, the new-window, new-session, split-window, respawn-window', 'annotation': 'example of passing shell commands to tmux argument from shell prompt'},{'sign_idx': 9505, 'line_nr': 136, 'content': '           C-o         Rotate the panes in the current window forwards.', 'annotation': 'key-bind rotate pane'},{'sign_idx': 9524, 'line_nr': 210, 'content': '     shell prompt, from ~/.tmux.conf and bound to a key may look like:', 'annotation': 'examples of how tmux cmds run from sh-prompt, config-file and from tmux cmd prompt'},{'sign_idx': 9528, 'line_nr': 268, 'content': '     It is recommended that a semicolon used as a command separator should be', 'annotation': 'semi colon is the cmd separator'},{'sign_idx': 9501, 'line_nr': 21, 'content': '     A session is a single collection of pseudo terminals under the manage‐', 'annotation': 'what is a session'},{'sign_idx': 9521, 'line_nr': 186, 'content': '           M-1 to M-5  Arrange panes in one of the five preset layouts: even-', 'annotation': 'arrange pane in one of the preset layouts'},{'sign_idx': 9545, 'line_nr': 475, 'content': '     ‘mysession:mywindow.1’.  If the pane index is omitted, the currently ac‐', 'annotation': 'syntax for specifying pane'},{'sign_idx': 9538, 'line_nr': 421, 'content': '           1.   A session ID prefixed with a $.', 'annotation': 'target-session arg can take session id prefixed with $'},],}}
let l:bm_current_session = 'default'
